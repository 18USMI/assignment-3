class Solution {
  public:
    Node* deleteNode(Node* head, int x) {
        // If deleting the head node
        if (x == 1) {
            Node* temp = head;
            head = head->next;
            delete temp;
            return head;
        }
        
        // Traverse to the node just before the one to delete
        Node* prev = head;
        for (int i = 1; i < x - 1 && prev != NULL; ++i) {
            prev = prev->next;
        }

        // If node to delete exists
        if (prev != NULL && prev->next != NULL) {
            Node* temp = prev->next;
            prev->next = temp->next;
            delete temp;
        }

        return head;
    }
};
